{"version":3,"file":"bf8bb8c3177ba8d23d7ed57beb526928f686a07a-11979382871ee670566d.js","mappings":"kIASA,MAAMA,GAAE,gFAGaC,IAAAA,IAAC,QAAEC,GAAS,SAAMA,EAAU,SAAW,IAAI,GAAC,cAI3DC,GAAE,gFAGKC,IAAAA,IAAC,QAAEF,GAAS,SAAMA,EAAU,KAAO,SAAS,GAAC,0DAuB1D,IAdwCG,IACtC,MAAM,KAAEC,EAAI,QAAEJ,GAAU,GAAUG,EAElC,OACEE,EAAAA,EAAAA,IAACP,EAAE,CAACE,QAASA,GACVI,EAAKE,KAAKC,IACTF,EAAAA,EAAAA,IAACJ,EAAE,CAACO,IAAKD,EAAKP,QAASA,GACpBA,GAAUK,EAAAA,EAAAA,IAACI,EAAAA,GAAI,CAACC,GAAE,iBAAmBH,GAAQA,GAAcA,KAG7D,C,gIC7BT,MAAMI,GAAoBC,EAAAA,EAAAA,GAAOH,EAAAA,GAAI,qBAAXG,CAAY,wMAYhCC,GAAY,2IAUZC,GAAI,wFAKJC,GAAO,gJAkCb,MA3B0CZ,IACxC,MAAM,MACJa,EAAK,WACLC,EAAU,KACVC,EAAI,QACJC,EACAC,WACEC,iBAAiB,gBAAEC,IACpB,KACDC,GACEpB,EAEJ,OACEE,EAAAA,EAAAA,IAACM,EAAiB,CAACD,GAAIa,IACrBlB,EAAAA,EAAAA,IAACQ,EAAY,MACXR,EAAAA,EAAAA,IAACmB,EAAAA,EAAW,CAACC,MAAOH,EAAiBI,IAAI,qBAE3CrB,EAAAA,EAAAA,IAAAA,MAAAA,CAAKsB,MAAO,CAAEC,QAAS,OAAQC,gBAAiB,WAC9CxB,EAAAA,EAAAA,IAAAA,KAAAA,KAAKW,IACLX,EAAAA,EAAAA,IAACS,EAAI,KAAEI,IACPb,EAAAA,EAAAA,IAACyB,EAAAA,EAAO,CAAC1B,KAAMa,KACfZ,EAAAA,EAAAA,IAACU,EAAO,KAAEI,IAEM,ECxDxB,MAAMY,GAAI,oVAkDV,MA9B0C5B,IACxC,MAAM,YAAE6B,EAAW,MAAEC,GAAU9B,GAEzB,EAACC,EAAK,EAAC8B,IAAWC,EAAAA,EAAAA,UAAsB,IAc9C,OAZAC,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAeJ,EAEA,OAAfD,IACFK,EAAeJ,EAAMK,QAAQC,GACpBA,EAAKC,KAAKC,YAAYxB,WAAWyB,SAASV,MAIrDE,EAAQG,EAAa,GACpB,CAACL,EAAaC,KAGf5B,EAAAA,EAAAA,IAAC0B,EAAI,KACF3B,EAAKE,KAAKqC,IACTtC,EAAAA,EAAAA,IAACuC,GAAQ,QACPpC,IAAKmC,EAAKH,KAAKK,IACXF,EAAKH,KAAKC,YAAW,CACzBlB,KAAMoB,EAAKH,KAAKM,OAAOC,UAGtB,C","sources":["webpack://blog/./src/components/TagList.tsx","webpack://blog/./src/components/card/CardItem.tsx","webpack://blog/./src/components/card/CardList.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\n\ntype TagListType = {\n  list: string[];\n  linkTag?: boolean;\n};\n\nconst Ul = styled.ul<{ linkTag?: boolean }>`\n  margin: 10px 0;\n  display: flex;\n  justify-content: ${({ linkTag }) => (linkTag ? \"center\" : null)};\n  gap: 10px;\n`;\n\nconst Li = styled.li<{ linkTag?: boolean }>`\n  background-color: black;\n  color: white;\n  padding: ${({ linkTag }) => (linkTag ? null : \"2px 5px\")};\n  border-radius: 5px;\n\n  & > a {\n    display: block;\n    padding: 2px 5px;\n  }\n`;\n\nconst TagList: React.FC<TagListType> = (props) => {\n  const { list, linkTag = false } = props;\n\n  return (\n    <Ul linkTag={linkTag}>\n      {list.map((tag) => (\n        <Li key={tag} linkTag={linkTag}>\n          {linkTag ? <Link to={`/category?tag=${tag}`}>{tag}</Link> : tag}\n        </Li>\n      ))}\n    </Ul>\n  );\n};\n\nexport default TagList;\n","import styled from \"@emotion/styled\";\nimport TagList from \"components/TagList\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport { FrontmatterType } from \"types\";\n\ntype CardItemType = FrontmatterType & { link: string };\n\nconst CardItemContainer = styled(Link)`\n  border-radius: 14px;\n  overflow: hidden;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\n  transition: box-shadow 0.3s ease-in-out;\n  height: 100%;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  height: 200px;\n\n  .gatsby-image-wrapper {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst Date = styled.h4`\n  font-weight: 400;\n  opacity: 0.5;\n`;\n\nconst Summary = styled.p`\n  display: -webkit-box;\n  overflow: hidden;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n\nconst CardItem: React.FC<CardItemType> = (props) => {\n  const {\n    title,\n    categories,\n    date,\n    summary,\n    thumbnail: {\n      childImageSharp: { gatsbyImageData },\n    },\n    link,\n  } = props;\n\n  return (\n    <CardItemContainer to={link}>\n      <ImageWrapper>\n        <GatsbyImage image={gatsbyImageData} alt=\"cardBackground\" />\n      </ImageWrapper>\n      <div style={{ padding: \"15px\", backgroundColor: \"white\" }}>\n        <h2>{title}</h2>\n        <Date>{date}</Date>\n        <TagList list={categories} />\n        <Summary>{summary}</Summary>\n      </div>\n    </CardItemContainer>\n  );\n};\n\nexport default CardItem;\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useState } from \"react\";\nimport { EdgesType } from \"types\";\nimport CardItem from \"./CardItem\";\n\ntype CardListType = {\n  selectedTag: string;\n  edges: EdgesType[];\n};\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 20px;\n  margin: 0 auto;\n  transition: all 0.3s ease-in-out;\n\n  @media (max-width: 1600px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n\n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (max-width: 900px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst CardList: React.FC<CardListType> = (props) => {\n  const { selectedTag, edges } = props;\n\n  const [list, setList] = useState<EdgesType[]>([]);\n\n  useEffect(() => {\n    let selectedList = edges;\n\n    if (selectedTag != \"All\") {\n      selectedList = edges.filter((edge) => {\n        return edge.node.frontmatter.categories.includes(selectedTag);\n      });\n    }\n\n    setList(selectedList);\n  }, [selectedTag, edges]);\n\n  return (\n    <Grid>\n      {list.map((item) => (\n        <CardItem\n          key={item.node.id}\n          {...item.node.frontmatter}\n          link={item.node.fields.slug}\n        />\n      ))}\n    </Grid>\n  );\n};\n\nexport default CardList;\n"],"names":["Ul","_ref","linkTag","Li","_ref2","props","list","___EmotionJSX","map","tag","key","Link","to","CardItemContainer","_styled","ImageWrapper","Date","Summary","title","categories","date","summary","thumbnail","childImageSharp","gatsbyImageData","link","GatsbyImage","image","alt","style","padding","backgroundColor","TagList","Grid","selectedTag","edges","setList","useState","useEffect","selectedList","filter","edge","node","frontmatter","includes","item","CardItem","id","fields","slug"],"sourceRoot":""}